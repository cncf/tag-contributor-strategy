#!/usr/bin/env python3                                                                                                  
#                                                                                                                       
# Copyright this project and it's contributors                                                                          
# SPDX-License-Identifier: Apache-2.0                                                                                   
#                                                                                                                       
# encoding=utf8

import csv
import urllib.request
import json
import os

projectsCsvFile = os.path.dirname(os.path.realpath(__file__))+'/../../website/data/projects.json'

landscapeBaseURL = 'https://landscape.cncf.io/api/projects/all.json'

# add an entry at the top as the header. unfortunately, we can't have comments in JSON files
csvRows = [{
    "IMPORTANT": "------------- This file is autogenerated. Please do not edit manually. -------------",
    "COMMENT": "This data is pulled in from CNCF landscape. Submit a PR to the landscape repo to update any project data.",
    "project": "AUTOGENERATED"
}]

with urllib.request.urlopen(landscapeBaseURL) as hostedProjectsResponse:
    for project in json.load(hostedProjectsResponse):
        print("Processing {}...".format(project['name']))

        repo_url = None
        language = None
        if 'repositories' in project and len(project['repositories']) > 0:
            for repo in project['repositories']:
                if repo['primary']:
                    repo_url = repo['url']
                    if len(repo['languages']) > 0:
                        largest_value = max(repo['languages'].values())
                        for key, value in repo['languages'].items():
                            if value == largest_value:
                                language = key
                    break

        csvRows.append({
            'name': project['name'],
            'path': project['subcategory'] if 'subcategory' in project else None,
            'description': project['description'] if 'description' in project else None,
            'homepage_url': project['homepage_url'] if 'homepage_url' in project else None,
            'project': project['maturity'] if 'maturity' in project else None,
            'repo_url': repo_url if repo_url else None,
            'logo': project['logo_url'] if 'logo_url' in project else None,
            'twitter': project['twitter_url'] if 'twitter_url' in project else None,
            'crunchbase': project['crunchbase_url'] if 'crunchbase_url' in project else None,
            'chat_channel': project['chat_channel'] if 'chat_channel' in project else None,
            'accepted': project['accepted_at'] if 'accepted_at' in project else None,
            'dev_stats_url': project['devstats_url'] if 'devstats_url' in project else None,
            'artwork_url': project['artwork_url'] if 'artwork_url' in project else None,
            'stack_overflow_url': project['stack_overflow_url'] if 'stack_overflow_url' in project else None,
            'blog_url': project['blog_url'] if 'blog_url' in project else None,
            'mailing_list_url': project['mailing_list_url'] if 'mailing_list_url' in project else None,
            'slack_url': project['slack_url'] if 'slack_url' in project else None,
            'gitter_url': project['gitter_url'] if 'gitter_url' in project else None,
            'youtube_url': project['youtube_url'] if 'youtube_url' in project else None,
            'language': language if language else None
            })

json_object = json.dumps(csvRows, indent=4)

with open(projectsCsvFile, 'w') as projectsCsvFileObject:
    projectsCsvFileObject.write(json_object)
